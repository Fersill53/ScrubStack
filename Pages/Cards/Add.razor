@page "/cards/add"
@attribute [Authorize]

@using ScrubStack.Data
@using ScrubStack.Data.Models
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext Db
@inject NavigationManager NavigationManager

<h3>Add Preference Card</h3>

<Validations @ref="validationsRef" ValidSubmit="HandleValidSubmit">
    <Field>
        <Label>Surgeon Name</Label>
        <TextEdit @bind-Text="card.SurgeonName" />
        <ValidationError />
    </Field>

    <Field>
        <Label>Procedure Name</Label>
        <TextEdit @bind-Text="card.ProcedureName" />
        <ValidationError />
    </Field>

    <Field>
        <Label>Instrument Sets</Label>
        <Select TValue="int" Multiple @bind-SelectedValues="selectedSetIds">
            @foreach (var set in allSets)
            {
                <SelectItem Value="@set.Id">@set.SetName</SelectItem>
            }
        </Select>
        <ValidationError />
    </Field>

    <Button Color="Color.Success" Type="Button" Clicked="HandleValidSubmit">Add Card</Button>
</Validations>

@code {
    private Validations validationsRef;
    private PreferenceCard card = new();
    private List<InstrumentSet> allSets = new();
    private List<int> selectedSetIds = new();

    protected override async Task OnInitializedAsync()
    {
        allSets = await Db.InstrumentSets.ToListAsync();
    }

    private async Task HandleValidSubmit()
    {
        // Load actual InstrumentSet objects by selected IDs
        var selectedSets = await Db.InstrumentSets
            .Where(s => selectedSetIds.Contains(s.Id))
            .ToListAsync();

        card.InstrumentSets = selectedSets;
        Db.PreferenceCards.Add(card);
        await Db.SaveChangesAsync();
        NavigationManager.NavigateTo("/cards");
    }
}
