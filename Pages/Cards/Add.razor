// Add.razor
@page "/cards/add"
@using ScrubStack.Data
@using ScrubStack.Data.Models
@using Microsoft.EntityFrameworkCore
@using Blazored.Typeahead
@inject ApplicationDbContext Db
@inject NavigationManager NavigationManager

<h3>Add New Preference Card</h3>

<EditForm Model="card" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Surgeon Name</label>
        <InputText class="form-control" @bind-Value="card.SurgeonName" />
    </div>

    <div class="mb-3">
        <label class="form-label">Procedure Name</label>
        <InputText class="form-control" @bind-Value="card.ProcedureName" />
    </div>

    <div class="mb-3">
        <label class="form-label">Instrument Sets</label>
        <BlazoredTypeahead
            @bind-SelectedItems="selectedInstrumentSets"
            Data="filteredSets"
            TextField="SetName"
            ValueField="Id"
            TValue="InstrumentSet"
            TItem="InstrumentSet"
            Placeholder="Search and select instrument sets"
            MinLength="1"
            Debounce="300"
            Class="form-control"
            EnableClear="true"
            ShowDropDownOnFocus="true"
            Multiple="true" />
    </div>

    <button type="submit" class="btn btn-primary">Save Card</button>
</EditForm>

@code {
    private PreferenceCard card = new();
    private List<InstrumentSet> allSets = new();
    private List<InstrumentSet> selectedInstrumentSets = new();

    protected override async Task OnInitializedAsync()
    {
        allSets = await Db.InstrumentSets.ToListAsync();
    }

    private async Task<IEnumerable<InstrumentSet>> filteredSets(string searchText)
    {
        return allSets
            .Where(set => set.SetName.Contains(searchText, StringComparison.OrdinalIgnoreCase))
            .ToList();
    }

    private async Task HandleValidSubmit()
    {
        card.InstrumentSets = selectedInstrumentSets;
        Db.PreferenceCards.Add(card);
        await Db.SaveChangesAsync();
        NavigationManager.NavigateTo("/cards");
    }
}
