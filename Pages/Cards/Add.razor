@page "/cards/add"
@using Microsoft.EntityFrameworkCore
@using ScrubStack.Data
@using ScrubStack.Data.Models
@inject ApplicationDbContext Db
@inject NavigationManager NavigationManager

<h3>Add New Preference Card</h3>

<EditForm Model="card" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Surgeon Name</label>
        <InputText class="form-control" @bind-Value="card.SurgeonName" />
    </div>

    <div class="mb-3">
        <label class="form-label">Procedure Name</label>
        <InputText class="form-control" @bind-Value="card.ProcedureName" />
    </div>

    <div class="mb-3">
        <label class="form-label">Instrument Sets</label>
        @foreach (var set in AllInstrumentSets)
        {
            <div class="form-check">
                <input type="checkbox" class="form-check-input"
                       value="@set.Id"
                       @onchange="e => ToggleInstrumentSetSelection(set.Id, e.Value?.ToString() == "on")" />
                <label class="form-check-label">@set.Name</label>
            </div>
        }
    </div>

    <button type="submit" class="btn btn-primary">Save Card</button>
</EditForm>

@code {
    private PreferenceCard card = new();
    private List<InstrumentSet> AllInstrumentSets = new();
    private HashSet<int> SelectedSetIds = new();

    protected override async Task OnInitializedAsync()
    {
        AllInstrumentSets = await Db.InstrumentSets.ToListAsync();
    }

    private void ToggleInstrumentSetSelection(int setId, bool selected)
    {
        if (selected)
            SelectedSetIds.Add(setId);
        else
            SelectedSetIds.Remove(setId);
    }

    private async Task HandleValidSubmit()
    {
        // Load the selected sets from the DB and assign them to the card
        var selectedSets = await Db.InstrumentSets
            .Where(set => SelectedSetIds.Contains(set.Id))
            .ToListAsync();

        card.InstrumentSets = selectedSets;

        Db.PreferenceCards.Add(card);
        await Db.SaveChangesAsync();
        NavigationManager.NavigateTo("/cards");
    }
}
