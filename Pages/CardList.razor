@page "/cards"
@using Microsoft.EntityFrameworkCore
@using ScrubStack.Data
@using ScrubStack.Data.Models   
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Authorization
@inject ApplicationDbContext Db
@inject AuthenticationStateProvider AuthProvider
@attribute [Authorize]

<h3>Surgeon Preference Cards</h3>

@if (loading)
{
    <p>Loading preference cards...</p>
}
else if (cards is not null && cards.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Surgeon</th>
                <th>Procedure</th>
                <th>Instrument Sets</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var card in cards)
            {
                <tr>
                    <td>@card.SurgeonName</td>
                    <td>@card.ProcedureName</td>
                    <td>
                        @if (card.InstrumentSets?.Count > 0)
                        {
                            @string.Join(", ", card.InstrumentSets.Select(s => s.SetName))
                        }
                        else
                        {
                            <em>No sets</em>
                        }
                    </td>
                    <td>
                        <button class="btn btn-sm btn-primary me-1">Edit</button>
                        <button class="btn btn-sm btn-danger">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No preference cards found.</p>
}

@code {
    private bool loading = true;
    private List<PreferenceCard> cards;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!user.Identity?.IsAuthenticated ?? true)
        {
            loading = false;
            return;
        }

        cards = await Db.PreferenceCards
            .Include(c => c.InstrumentSets)
            .ToListAsync();

        loading = false;
    }
}
